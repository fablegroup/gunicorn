import socket
from collections.abc import Callable
from ssl import SSLContext, SSLSocket
from typing import TYPE_CHECKING, Any, Literal, TypeAlias

from _typeshed import Incomplete

if TYPE_CHECKING:
    from gunicorn.config import Config
    from gunicorn.glogging import Logger

_t_addr: TypeAlias = tuple[str, int] | str

def _get_socket_family(addr: _t_addr) -> socket.AddressFamily: ...
def close_sockets(listeners: list[socket.socket], unlink: bool = True) -> None: ...
def set_socket_options(conf: Config, sock: socket.socket) -> None: ...
def get_uri(listener: socket.socket, is_ssl: bool = False) -> str: ...
def create_socket(conf: Config, log: Logger, addr: _t_addr) -> socket.socket: ...
def create_sockets(
    conf: Config, log: Logger, fds: None = ...
) -> list[socket.socket]: ...
def ssl_context(conf: Config) -> SSLContext: ...
def ssl_wrap_socket(sock: socket.socket, conf: Config) -> SSLSocket: ...
